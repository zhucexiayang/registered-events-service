prop_data_id=register-event-prop
prop_group=platform-service
#spring.application.name=registered-events-service
#server.port=9317
#
#
#mysql.driver=com.mysql.jdbc.Driver
#db.url=jdbc:mysql://127.0.0.1:3306/zx_registered_event?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
#db.user=root
#db.password=rootDemo
#mysql.initialSize=10
#mysql.maxActive=1000
#mysql.maxIdle=500
#mysql.minIdle=20
#mysql.maxWait=20
#
## kafka配置信息
##brokers集群
##bootstrap.servers=10.103.11.1:9092,10.103.11.2:9092,10.103.11.3:9092
#bootstrap.servers=127.0.0.1:9092
#acks=all
##发送失败重试次数
#retries=10
##批处理条数：当多个记录被发送到同一个分区时，生产者会尝试将记录合并到更少的请求中。这有助于客户端和服务器的性能。
#batch.size=1638
##批处理延迟时间上限：即1ms过后，不管是否达到批处理数，都直接发送一次请求
#linger.ms=1
##即32MB的批处理缓冲区
#buffer.memory=33554432
##消费者群组ID，发布-订阅模式，即如果一个生产者，多个消费者都要消费，那么需要定义自己的群组，同一群组内的消费者只有一个能消费到消息
#group.id=register_event
##如果为true，消费者的偏移量将在后台定期提交。
#enable.auto.commit=true
##如何设置为自动提交（enable.auto.commit=true），这里设置自动提交周期
#auto.commit.interval.ms=1000
##在使用Kafka的组管理时，用于检测消费者故障的超时
#session.timeout.ms=15000
##消费监听器容器并发数
#concurrency = 3